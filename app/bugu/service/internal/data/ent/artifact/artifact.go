// Code generated by entc, DO NOT EDIT.

package artifact

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the artifact type in the database.
	Label = "artifact"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFileID holds the string denoting the file_id field in the database.
	FieldFileID = "file_id"
	// FieldArtifactHash holds the string denoting the artifact_hash field in the database.
	FieldArtifactHash = "artifact_hash"
	// FieldArtifactSize holds the string denoting the artifact_size field in the database.
	FieldArtifactSize = "artifact_size"
	// FieldArtifactAddr holds the string denoting the artifact_addr field in the database.
	FieldArtifactAddr = "artifact_addr"
	// FieldMethod holds the string denoting the method field in the database.
	FieldMethod = "method"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeAffiliatedFile holds the string denoting the affiliated_file edge name in mutations.
	EdgeAffiliatedFile = "affiliated_file"
	// EdgeAffiliatedUser holds the string denoting the affiliated_user edge name in mutations.
	EdgeAffiliatedUser = "affiliated_user"
	// Table holds the table name of the artifact in the database.
	Table = "artifacts"
	// AffiliatedFileTable is the table that holds the affiliated_file relation/edge.
	AffiliatedFileTable = "artifacts"
	// AffiliatedFileInverseTable is the table name for the File entity.
	// It exists in this package in order to avoid circular dependency with the "file" package.
	AffiliatedFileInverseTable = "files"
	// AffiliatedFileColumn is the table column denoting the affiliated_file relation/edge.
	AffiliatedFileColumn = "file_id"
	// AffiliatedUserTable is the table that holds the affiliated_user relation/edge. The primary key declared below.
	AffiliatedUserTable = "user_user_artifact"
	// AffiliatedUserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	AffiliatedUserInverseTable = "users"
)

// Columns holds all SQL columns for artifact fields.
var Columns = []string{
	FieldID,
	FieldFileID,
	FieldArtifactHash,
	FieldArtifactSize,
	FieldArtifactAddr,
	FieldMethod,
	FieldCreatedAt,
	FieldUpdatedAt,
}

var (
	// AffiliatedUserPrimaryKey and AffiliatedUserColumn2 are the table columns denoting the
	// primary key for the affiliated_user relation (M2M).
	AffiliatedUserPrimaryKey = []string{"user_id", "artifact_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
)

// Method defines the type for the "method" enum field.
type Method string

// Method values.
const (
	MethodAdposhel    Method = "Adposhel"
	MethodAgent       Method = "Agent"
	MethodAllaple     Method = "Allaple"
	MethodAmonetize   Method = "Amonetize"
	MethodAndrom      Method = "Androm"
	MethodAutorun     Method = "Autorun"
	MethodBrowseFox   Method = "BrowseFox"
	MethodDinwod      Method = "Dinwod"
	MethodElex        Method = "Elex"
	MethodExpiro      Method = "Expiro"
	MethodFasong      Method = "Fasong"
	MethodHackKMS     Method = "HackKMS"
	MethodHlux        Method = "Hlux"
	MethodInjector    Method = "Injector"
	MethodInstallCore Method = "InstallCore"
	MethodMultiPlug   Method = "MultiPlug"
	MethodNeoreklami  Method = "Neoreklami"
	MethodNeshta      Method = "Neshta"
	MethodOther       Method = "Other"
	MethodRegrun      Method = "Regrun"
	MethodSality      Method = "Sality"
	MethodSnarasite   Method = "Snarasite"
	MethodStantinko   Method = "Stantinko"
	MethodVBA         Method = "VBA"
	MethodVBKrypt     Method = "VBKrypt"
	MethodVilsel      Method = "Vilsel"
)

func (m Method) String() string {
	return string(m)
}

// MethodValidator is a validator for the "method" field enum values. It is called by the builders before save.
func MethodValidator(m Method) error {
	switch m {
	case MethodAdposhel, MethodAgent, MethodAllaple, MethodAmonetize, MethodAndrom, MethodAutorun, MethodBrowseFox, MethodDinwod, MethodElex, MethodExpiro, MethodFasong, MethodHackKMS, MethodHlux, MethodInjector, MethodInstallCore, MethodMultiPlug, MethodNeoreklami, MethodNeshta, MethodOther, MethodRegrun, MethodSality, MethodSnarasite, MethodStantinko, MethodVBA, MethodVBKrypt, MethodVilsel:
		return nil
	default:
		return fmt.Errorf("artifact: invalid enum value for method field: %q", m)
	}
}
