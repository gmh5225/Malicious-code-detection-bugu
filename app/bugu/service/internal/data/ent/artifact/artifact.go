// Code generated by entc, DO NOT EDIT.

package artifact

import (
	"time"
)

const (
	// Label holds the string label denoting the artifact type in the database.
	Label = "artifact"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFileID holds the string denoting the file_id field in the database.
	FieldFileID = "file_id"
	// FieldAffiliatedFileID holds the string denoting the affiliated_file_id field in the database.
	FieldAffiliatedFileID = "affiliated_file_id"
	// FieldMethod holds the string denoting the method field in the database.
	FieldMethod = "method"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeAffiliatedFile holds the string denoting the affiliated_file edge name in mutations.
	EdgeAffiliatedFile = "affiliated_file"
	// EdgeAffiliatedUser holds the string denoting the affiliated_user edge name in mutations.
	EdgeAffiliatedUser = "affiliated_user"
	// Table holds the table name of the artifact in the database.
	Table = "artifacts"
	// AffiliatedFileTable is the table that holds the affiliated_file relation/edge.
	AffiliatedFileTable = "artifacts"
	// AffiliatedFileInverseTable is the table name for the File entity.
	// It exists in this package in order to avoid circular dependency with the "file" package.
	AffiliatedFileInverseTable = "files"
	// AffiliatedFileColumn is the table column denoting the affiliated_file relation/edge.
	AffiliatedFileColumn = "affiliated_file_id"
	// AffiliatedUserTable is the table that holds the affiliated_user relation/edge. The primary key declared below.
	AffiliatedUserTable = "user_user_artifact"
	// AffiliatedUserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	AffiliatedUserInverseTable = "users"
)

// Columns holds all SQL columns for artifact fields.
var Columns = []string{
	FieldID,
	FieldFileID,
	FieldAffiliatedFileID,
	FieldMethod,
	FieldCreatedAt,
	FieldUpdatedAt,
}

var (
	// AffiliatedUserPrimaryKey and AffiliatedUserColumn2 are the table columns denoting the
	// primary key for the affiliated_user relation (M2M).
	AffiliatedUserPrimaryKey = []string{"user_id", "artifact_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
)
