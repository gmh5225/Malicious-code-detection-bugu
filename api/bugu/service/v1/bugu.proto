syntax = "proto3";

package bugu.service.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/hominsu/bugu/api/bugu/service/v1;v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "E-Code API";
    version: "1.0";
    description: "";
    contact: {
      name: "Bugu Backend";
      url: "https://github.com/hominsu/bugu";
      email: "hominsu@foxmail.com";
    };
  };
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service Bugu {
  rpc Register (RegisterRequest) returns (RegisterReply) {
    option (google.api.http) = {
      post: "/v1/users",
      body: "*",
    };
  };

  rpc Login (LoginRequest) returns (LoginReply) {
    option (google.api.http) = {
      post: "/v1/users/login",
      body: "*",
    };
  };

  rpc GetCurrentUser (GetCurrentUserRequest) returns (GetCurrentUserReply) {
    option (google.api.http) = {
      get: "/v1/user/{id}",
    };
  };

  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserReply) {
    option (google.api.http) = {
      put: "/v1/users",
      body: "*",
    };
  };

  rpc GetFileMeta (GetFileMetaRequest) returns (GetFileMetaReply) {
    option (google.api.http) = {
      get: "/v1/user/{user_id}/file/{file_id}/metadata",
    };
  };

  rpc GetFileMetaByUserId (GetFileMetaByUserIdRequest) returns (GetFileMetaByUserIdReply) {
    option (google.api.http) = {
      get: "/v1/user/{user_id}/files",
    };
  };

  rpc DeleteFileMetadata (DeleteFileMetadataRequest) returns (DeleteFileMetadataReply) {
    option (google.api.http) = {
      delete: "/v1/user/{user_id}/file/{file_id}/metadata",
    };
  };

  rpc Detect (DetectRequest) returns (DetectReply) {
    option (google.api.http) = {
      get: "/v1/user/{user_id}/file/{file_id}/detect",
      additional_bindings: {
        post: "/v1/user/file/detect",
        body: "*"
      }
    };
  };

  rpc Confusion (ConfusionRequest) returns (ConfusionReply) {
    option (google.api.http) = {
      get: "/v1/user/{user_id}/file/{file_id}/confusion",
      additional_bindings: {
        post: "/v1/user/file/confusion",
        body: "*"
      }
    };
  };

  rpc GetArtifactMetadata (GetArtifactMetadataRequest) returns (GetArtifactMetadataReply) {
    option (google.api.http) = {
      get: "/v1/user/{user_id}/artifact/{artifact_id}/metadata",
    };
  };

  rpc GetArtifactMetadataByFileId (GetArtifactMetadataByFileIdRequest) returns (GetArtifactMetadataByFileIdReply) {
    option (google.api.http) = {
      get: "/v1/user/{user_id}/artifact/file/{file_id}",
    };
  };

  rpc DeleteArtifactMetadata (DeleteArtifactMetadataRequest) returns (DeleteArtifactMetadataReply) {
    option (google.api.http) = {
      delete: "/v1/user/{user_id}/artifact/{artifact_id}/metadata",
    };
  };
};

message RegisterRequest {
  message User {
    string username = 1;
    string email = 2;
    string password = 3;
  }
  User user = 1;
}

message RegisterReply {
  UserStruct user = 1;
}

message LoginRequest {
  message User {
    string email = 1;
    string password = 2;
  }
  User user = 1;
}

message LoginReply {
  UserStruct user = 1;
  string token = 2;
}

message GetCurrentUserRequest {
  string id = 1 [(validate.rules).string = {uuid: true}];
}

message GetCurrentUserReply {
  UserStruct user = 1;
}

message UpdateUserRequest {
  message User {
    string id = 1;
    string email = 2;
    string username = 4;
    string password = 5;
  }
  User user = 1;
}

message UpdateUserReply {
  UserStruct user = 1;
}

message UserStruct {
  string id = 1 [(validate.rules).string = {uuid: true}];
  string email = 2;
  string username = 3;
}

enum Type {
  TYPE_ADPOSHEL = 0;
  TYPE_AGENT = 1;
  TYPE_ALLAPLE = 2;
  TYPE_AMONETIZE = 3;
  TYPE_ANDROM = 4;
  TYPE_AUTORUN = 5;
  TYPE_BROWSE_FOX = 6;
  TYPE_DINWOD = 7;
  TYPE_ELEX = 8;
  TYPE_EXPIRO = 9;
  TYPE_FASONG = 10;
  TYPE_HACK_KMS = 11;
  TYPE_HLUX = 12;
  TYPE_INJECTOR = 13;
  TYPE_INSTALL_CORE = 14;
  TYPE_MULTI_Plug = 15;
  TYPE_NEOREKLAMI = 16;
  TYPE_NESHTA = 17;
  TYPE_OTHER = 18;
  TYPE_REGRUN = 19;
  TYPE_SALITY = 20;
  TYPE_SNARASITE = 21;
  TYPE_STABTINKO = 22;
  TYPE_VBA = 23;
  TYPE_VBKRYPT = 24;
  TYPE_VILSEL = 25;
}

message GetFileMetaRequest {
  string user_id = 1 [(validate.rules).string = {uuid: true}];
  string file_id = 2 [(validate.rules).string = {uuid: true}];
}

message GetFileMetaReply {
  string file_id = 1 [(validate.rules).string = {uuid: true}];
  string file_sha_1 = 2;
  int64 file_size = 3;
  string file_addr = 4;
  Type type = 5;
}

message GetFileMetaByUserIdRequest {
  string user_id = 1 [(validate.rules).string = {uuid: true}];
}

message GetFileMetaByUserIdReply {
  repeated GetFileMetaReply file_metadata = 1;
}

message DeleteFileMetadataRequest {
  string user_id = 1 [(validate.rules).string = {uuid: true}];
  string file_id = 2 [(validate.rules).string = {uuid: true}];
}

message DeleteFileMetadataReply {
}

message DetectRequest {
  string user_id = 1 [(validate.rules).string = {uuid: true}];
  string file_id = 2 [(validate.rules).string = {uuid: true}];
}

message DetectReply {
  string artifact_id = 1 [(validate.rules).string = {uuid: true}];
}

message ConfusionRequest {
  string user_id = 1 [(validate.rules).string = {uuid: true}];
  string file_id = 2 [(validate.rules).string = {uuid: true}];
}

message ConfusionReply {
  string artifact_id = 1 [(validate.rules).string = {uuid: true}];
  string file_id = 2 [(validate.rules).string = {uuid: true}];
  string affiliated_file_id = 3 [(validate.rules).string = {uuid: true}];
  string method = 4;
}

message GetArtifactMetadataRequest {
  string user_id = 1 [(validate.rules).string = {uuid: true}];
  string artifact_id = 2 [(validate.rules).string = {uuid: true}];
}

message GetArtifactMetadataReply {
  string artifact_id = 1 [(validate.rules).string = {uuid: true}];
  string file_id = 2 [(validate.rules).string = {uuid: true}];
  string affiliated_file_id = 3 [(validate.rules).string = {uuid: true}];
  string method = 4;
}

message GetArtifactMetadataByFileIdRequest {
  string user_id = 1 [(validate.rules).string = {uuid: true}];
  string file_id = 2 [(validate.rules).string = {uuid: true}];
}

message GetArtifactMetadataByFileIdReply {
  repeated GetArtifactMetadataReply artifact_metadata = 1;
}

message DeleteArtifactMetadataRequest {
  string user_id = 1 [(validate.rules).string = {uuid: true}];
  string artifact_id = 2 [(validate.rules).string = {uuid: true}];
}

message DeleteArtifactMetadataReply {
}