// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: bugu.proto

#include "bugu.pb.h"
#include "bugu.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace bugu {
namespace service {
namespace v1 {

static const char* Bugu_method_names[] = {
  "/bugu.service.v1.Bugu/Register",
  "/bugu.service.v1.Bugu/Login",
  "/bugu.service.v1.Bugu/GetCurrentUser",
  "/bugu.service.v1.Bugu/UpdateUser",
  "/bugu.service.v1.Bugu/GetFileMeta",
  "/bugu.service.v1.Bugu/GetFileMetaByUserId",
  "/bugu.service.v1.Bugu/DeleteFileMetadata",
  "/bugu.service.v1.Bugu/Detect",
  "/bugu.service.v1.Bugu/Confusion",
  "/bugu.service.v1.Bugu/GetArtifactMetadata",
  "/bugu.service.v1.Bugu/GetArtifactMetadataByFileId",
  "/bugu.service.v1.Bugu/DeleteArtifactMetadata",
};

std::unique_ptr< Bugu::Stub> Bugu::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< Bugu::Stub> stub(new Bugu::Stub(channel, options));
  return stub;
}

Bugu::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_Register_(Bugu_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_Login_(Bugu_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetCurrentUser_(Bugu_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateUser_(Bugu_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetFileMeta_(Bugu_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetFileMetaByUserId_(Bugu_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteFileMetadata_(Bugu_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_Detect_(Bugu_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_Confusion_(Bugu_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetArtifactMetadata_(Bugu_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetArtifactMetadataByFileId_(Bugu_method_names[10], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteArtifactMetadata_(Bugu_method_names[11], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status Bugu::Stub::Register(::grpc::ClientContext* context, const ::bugu::service::v1::RegisterRequest& request, ::bugu::service::v1::RegisterReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bugu::service::v1::RegisterRequest, ::bugu::service::v1::RegisterReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_Register_, context, request, response);
}

void Bugu::Stub::async::Register(::grpc::ClientContext* context, const ::bugu::service::v1::RegisterRequest* request, ::bugu::service::v1::RegisterReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bugu::service::v1::RegisterRequest, ::bugu::service::v1::RegisterReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Register_, context, request, response, std::move(f));
}

void Bugu::Stub::async::Register(::grpc::ClientContext* context, const ::bugu::service::v1::RegisterRequest* request, ::bugu::service::v1::RegisterReply* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Register_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::RegisterReply>* Bugu::Stub::PrepareAsyncRegisterRaw(::grpc::ClientContext* context, const ::bugu::service::v1::RegisterRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bugu::service::v1::RegisterReply, ::bugu::service::v1::RegisterRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_Register_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::RegisterReply>* Bugu::Stub::AsyncRegisterRaw(::grpc::ClientContext* context, const ::bugu::service::v1::RegisterRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncRegisterRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Bugu::Stub::Login(::grpc::ClientContext* context, const ::bugu::service::v1::LoginRequest& request, ::bugu::service::v1::LoginReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bugu::service::v1::LoginRequest, ::bugu::service::v1::LoginReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_Login_, context, request, response);
}

void Bugu::Stub::async::Login(::grpc::ClientContext* context, const ::bugu::service::v1::LoginRequest* request, ::bugu::service::v1::LoginReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bugu::service::v1::LoginRequest, ::bugu::service::v1::LoginReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Login_, context, request, response, std::move(f));
}

void Bugu::Stub::async::Login(::grpc::ClientContext* context, const ::bugu::service::v1::LoginRequest* request, ::bugu::service::v1::LoginReply* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Login_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::LoginReply>* Bugu::Stub::PrepareAsyncLoginRaw(::grpc::ClientContext* context, const ::bugu::service::v1::LoginRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bugu::service::v1::LoginReply, ::bugu::service::v1::LoginRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_Login_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::LoginReply>* Bugu::Stub::AsyncLoginRaw(::grpc::ClientContext* context, const ::bugu::service::v1::LoginRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncLoginRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Bugu::Stub::GetCurrentUser(::grpc::ClientContext* context, const ::bugu::service::v1::GetCurrentUserRequest& request, ::bugu::service::v1::GetCurrentUserReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bugu::service::v1::GetCurrentUserRequest, ::bugu::service::v1::GetCurrentUserReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetCurrentUser_, context, request, response);
}

void Bugu::Stub::async::GetCurrentUser(::grpc::ClientContext* context, const ::bugu::service::v1::GetCurrentUserRequest* request, ::bugu::service::v1::GetCurrentUserReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bugu::service::v1::GetCurrentUserRequest, ::bugu::service::v1::GetCurrentUserReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetCurrentUser_, context, request, response, std::move(f));
}

void Bugu::Stub::async::GetCurrentUser(::grpc::ClientContext* context, const ::bugu::service::v1::GetCurrentUserRequest* request, ::bugu::service::v1::GetCurrentUserReply* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetCurrentUser_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::GetCurrentUserReply>* Bugu::Stub::PrepareAsyncGetCurrentUserRaw(::grpc::ClientContext* context, const ::bugu::service::v1::GetCurrentUserRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bugu::service::v1::GetCurrentUserReply, ::bugu::service::v1::GetCurrentUserRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetCurrentUser_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::GetCurrentUserReply>* Bugu::Stub::AsyncGetCurrentUserRaw(::grpc::ClientContext* context, const ::bugu::service::v1::GetCurrentUserRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetCurrentUserRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Bugu::Stub::UpdateUser(::grpc::ClientContext* context, const ::bugu::service::v1::UpdateUserRequest& request, ::bugu::service::v1::UpdateUserReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bugu::service::v1::UpdateUserRequest, ::bugu::service::v1::UpdateUserReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateUser_, context, request, response);
}

void Bugu::Stub::async::UpdateUser(::grpc::ClientContext* context, const ::bugu::service::v1::UpdateUserRequest* request, ::bugu::service::v1::UpdateUserReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bugu::service::v1::UpdateUserRequest, ::bugu::service::v1::UpdateUserReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateUser_, context, request, response, std::move(f));
}

void Bugu::Stub::async::UpdateUser(::grpc::ClientContext* context, const ::bugu::service::v1::UpdateUserRequest* request, ::bugu::service::v1::UpdateUserReply* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateUser_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::UpdateUserReply>* Bugu::Stub::PrepareAsyncUpdateUserRaw(::grpc::ClientContext* context, const ::bugu::service::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bugu::service::v1::UpdateUserReply, ::bugu::service::v1::UpdateUserRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateUser_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::UpdateUserReply>* Bugu::Stub::AsyncUpdateUserRaw(::grpc::ClientContext* context, const ::bugu::service::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateUserRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Bugu::Stub::GetFileMeta(::grpc::ClientContext* context, const ::bugu::service::v1::GetFileMetaRequest& request, ::bugu::service::v1::GetFileMetaReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bugu::service::v1::GetFileMetaRequest, ::bugu::service::v1::GetFileMetaReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetFileMeta_, context, request, response);
}

void Bugu::Stub::async::GetFileMeta(::grpc::ClientContext* context, const ::bugu::service::v1::GetFileMetaRequest* request, ::bugu::service::v1::GetFileMetaReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bugu::service::v1::GetFileMetaRequest, ::bugu::service::v1::GetFileMetaReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetFileMeta_, context, request, response, std::move(f));
}

void Bugu::Stub::async::GetFileMeta(::grpc::ClientContext* context, const ::bugu::service::v1::GetFileMetaRequest* request, ::bugu::service::v1::GetFileMetaReply* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetFileMeta_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::GetFileMetaReply>* Bugu::Stub::PrepareAsyncGetFileMetaRaw(::grpc::ClientContext* context, const ::bugu::service::v1::GetFileMetaRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bugu::service::v1::GetFileMetaReply, ::bugu::service::v1::GetFileMetaRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetFileMeta_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::GetFileMetaReply>* Bugu::Stub::AsyncGetFileMetaRaw(::grpc::ClientContext* context, const ::bugu::service::v1::GetFileMetaRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetFileMetaRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Bugu::Stub::GetFileMetaByUserId(::grpc::ClientContext* context, const ::bugu::service::v1::GetFileMetaByUserIdRequest& request, ::bugu::service::v1::GetFileMetaByUserIdReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bugu::service::v1::GetFileMetaByUserIdRequest, ::bugu::service::v1::GetFileMetaByUserIdReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetFileMetaByUserId_, context, request, response);
}

void Bugu::Stub::async::GetFileMetaByUserId(::grpc::ClientContext* context, const ::bugu::service::v1::GetFileMetaByUserIdRequest* request, ::bugu::service::v1::GetFileMetaByUserIdReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bugu::service::v1::GetFileMetaByUserIdRequest, ::bugu::service::v1::GetFileMetaByUserIdReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetFileMetaByUserId_, context, request, response, std::move(f));
}

void Bugu::Stub::async::GetFileMetaByUserId(::grpc::ClientContext* context, const ::bugu::service::v1::GetFileMetaByUserIdRequest* request, ::bugu::service::v1::GetFileMetaByUserIdReply* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetFileMetaByUserId_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::GetFileMetaByUserIdReply>* Bugu::Stub::PrepareAsyncGetFileMetaByUserIdRaw(::grpc::ClientContext* context, const ::bugu::service::v1::GetFileMetaByUserIdRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bugu::service::v1::GetFileMetaByUserIdReply, ::bugu::service::v1::GetFileMetaByUserIdRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetFileMetaByUserId_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::GetFileMetaByUserIdReply>* Bugu::Stub::AsyncGetFileMetaByUserIdRaw(::grpc::ClientContext* context, const ::bugu::service::v1::GetFileMetaByUserIdRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetFileMetaByUserIdRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Bugu::Stub::DeleteFileMetadata(::grpc::ClientContext* context, const ::bugu::service::v1::DeleteFileMetadataRequest& request, ::bugu::service::v1::DeleteFileMetadataReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bugu::service::v1::DeleteFileMetadataRequest, ::bugu::service::v1::DeleteFileMetadataReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteFileMetadata_, context, request, response);
}

void Bugu::Stub::async::DeleteFileMetadata(::grpc::ClientContext* context, const ::bugu::service::v1::DeleteFileMetadataRequest* request, ::bugu::service::v1::DeleteFileMetadataReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bugu::service::v1::DeleteFileMetadataRequest, ::bugu::service::v1::DeleteFileMetadataReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteFileMetadata_, context, request, response, std::move(f));
}

void Bugu::Stub::async::DeleteFileMetadata(::grpc::ClientContext* context, const ::bugu::service::v1::DeleteFileMetadataRequest* request, ::bugu::service::v1::DeleteFileMetadataReply* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteFileMetadata_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::DeleteFileMetadataReply>* Bugu::Stub::PrepareAsyncDeleteFileMetadataRaw(::grpc::ClientContext* context, const ::bugu::service::v1::DeleteFileMetadataRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bugu::service::v1::DeleteFileMetadataReply, ::bugu::service::v1::DeleteFileMetadataRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteFileMetadata_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::DeleteFileMetadataReply>* Bugu::Stub::AsyncDeleteFileMetadataRaw(::grpc::ClientContext* context, const ::bugu::service::v1::DeleteFileMetadataRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteFileMetadataRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Bugu::Stub::Detect(::grpc::ClientContext* context, const ::bugu::service::v1::DetectRequest& request, ::bugu::service::v1::DetectReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bugu::service::v1::DetectRequest, ::bugu::service::v1::DetectReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_Detect_, context, request, response);
}

void Bugu::Stub::async::Detect(::grpc::ClientContext* context, const ::bugu::service::v1::DetectRequest* request, ::bugu::service::v1::DetectReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bugu::service::v1::DetectRequest, ::bugu::service::v1::DetectReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Detect_, context, request, response, std::move(f));
}

void Bugu::Stub::async::Detect(::grpc::ClientContext* context, const ::bugu::service::v1::DetectRequest* request, ::bugu::service::v1::DetectReply* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Detect_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::DetectReply>* Bugu::Stub::PrepareAsyncDetectRaw(::grpc::ClientContext* context, const ::bugu::service::v1::DetectRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bugu::service::v1::DetectReply, ::bugu::service::v1::DetectRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_Detect_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::DetectReply>* Bugu::Stub::AsyncDetectRaw(::grpc::ClientContext* context, const ::bugu::service::v1::DetectRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDetectRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Bugu::Stub::Confusion(::grpc::ClientContext* context, const ::bugu::service::v1::ConfusionRequest& request, ::bugu::service::v1::ConfusionReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bugu::service::v1::ConfusionRequest, ::bugu::service::v1::ConfusionReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_Confusion_, context, request, response);
}

void Bugu::Stub::async::Confusion(::grpc::ClientContext* context, const ::bugu::service::v1::ConfusionRequest* request, ::bugu::service::v1::ConfusionReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bugu::service::v1::ConfusionRequest, ::bugu::service::v1::ConfusionReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Confusion_, context, request, response, std::move(f));
}

void Bugu::Stub::async::Confusion(::grpc::ClientContext* context, const ::bugu::service::v1::ConfusionRequest* request, ::bugu::service::v1::ConfusionReply* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Confusion_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::ConfusionReply>* Bugu::Stub::PrepareAsyncConfusionRaw(::grpc::ClientContext* context, const ::bugu::service::v1::ConfusionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bugu::service::v1::ConfusionReply, ::bugu::service::v1::ConfusionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_Confusion_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::ConfusionReply>* Bugu::Stub::AsyncConfusionRaw(::grpc::ClientContext* context, const ::bugu::service::v1::ConfusionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncConfusionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Bugu::Stub::GetArtifactMetadata(::grpc::ClientContext* context, const ::bugu::service::v1::GetArtifactMetadataRequest& request, ::bugu::service::v1::GetArtifactMetadataReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bugu::service::v1::GetArtifactMetadataRequest, ::bugu::service::v1::GetArtifactMetadataReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetArtifactMetadata_, context, request, response);
}

void Bugu::Stub::async::GetArtifactMetadata(::grpc::ClientContext* context, const ::bugu::service::v1::GetArtifactMetadataRequest* request, ::bugu::service::v1::GetArtifactMetadataReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bugu::service::v1::GetArtifactMetadataRequest, ::bugu::service::v1::GetArtifactMetadataReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetArtifactMetadata_, context, request, response, std::move(f));
}

void Bugu::Stub::async::GetArtifactMetadata(::grpc::ClientContext* context, const ::bugu::service::v1::GetArtifactMetadataRequest* request, ::bugu::service::v1::GetArtifactMetadataReply* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetArtifactMetadata_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::GetArtifactMetadataReply>* Bugu::Stub::PrepareAsyncGetArtifactMetadataRaw(::grpc::ClientContext* context, const ::bugu::service::v1::GetArtifactMetadataRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bugu::service::v1::GetArtifactMetadataReply, ::bugu::service::v1::GetArtifactMetadataRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetArtifactMetadata_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::GetArtifactMetadataReply>* Bugu::Stub::AsyncGetArtifactMetadataRaw(::grpc::ClientContext* context, const ::bugu::service::v1::GetArtifactMetadataRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetArtifactMetadataRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Bugu::Stub::GetArtifactMetadataByFileId(::grpc::ClientContext* context, const ::bugu::service::v1::GetArtifactMetadataByFileIdRequest& request, ::bugu::service::v1::GetArtifactMetadataByFileIdReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bugu::service::v1::GetArtifactMetadataByFileIdRequest, ::bugu::service::v1::GetArtifactMetadataByFileIdReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetArtifactMetadataByFileId_, context, request, response);
}

void Bugu::Stub::async::GetArtifactMetadataByFileId(::grpc::ClientContext* context, const ::bugu::service::v1::GetArtifactMetadataByFileIdRequest* request, ::bugu::service::v1::GetArtifactMetadataByFileIdReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bugu::service::v1::GetArtifactMetadataByFileIdRequest, ::bugu::service::v1::GetArtifactMetadataByFileIdReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetArtifactMetadataByFileId_, context, request, response, std::move(f));
}

void Bugu::Stub::async::GetArtifactMetadataByFileId(::grpc::ClientContext* context, const ::bugu::service::v1::GetArtifactMetadataByFileIdRequest* request, ::bugu::service::v1::GetArtifactMetadataByFileIdReply* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetArtifactMetadataByFileId_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::GetArtifactMetadataByFileIdReply>* Bugu::Stub::PrepareAsyncGetArtifactMetadataByFileIdRaw(::grpc::ClientContext* context, const ::bugu::service::v1::GetArtifactMetadataByFileIdRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bugu::service::v1::GetArtifactMetadataByFileIdReply, ::bugu::service::v1::GetArtifactMetadataByFileIdRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetArtifactMetadataByFileId_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::GetArtifactMetadataByFileIdReply>* Bugu::Stub::AsyncGetArtifactMetadataByFileIdRaw(::grpc::ClientContext* context, const ::bugu::service::v1::GetArtifactMetadataByFileIdRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetArtifactMetadataByFileIdRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Bugu::Stub::DeleteArtifactMetadata(::grpc::ClientContext* context, const ::bugu::service::v1::DeleteArtifactMetadataRequest& request, ::bugu::service::v1::DeleteArtifactMetadataReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bugu::service::v1::DeleteArtifactMetadataRequest, ::bugu::service::v1::DeleteArtifactMetadataReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteArtifactMetadata_, context, request, response);
}

void Bugu::Stub::async::DeleteArtifactMetadata(::grpc::ClientContext* context, const ::bugu::service::v1::DeleteArtifactMetadataRequest* request, ::bugu::service::v1::DeleteArtifactMetadataReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bugu::service::v1::DeleteArtifactMetadataRequest, ::bugu::service::v1::DeleteArtifactMetadataReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteArtifactMetadata_, context, request, response, std::move(f));
}

void Bugu::Stub::async::DeleteArtifactMetadata(::grpc::ClientContext* context, const ::bugu::service::v1::DeleteArtifactMetadataRequest* request, ::bugu::service::v1::DeleteArtifactMetadataReply* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteArtifactMetadata_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::DeleteArtifactMetadataReply>* Bugu::Stub::PrepareAsyncDeleteArtifactMetadataRaw(::grpc::ClientContext* context, const ::bugu::service::v1::DeleteArtifactMetadataRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bugu::service::v1::DeleteArtifactMetadataReply, ::bugu::service::v1::DeleteArtifactMetadataRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteArtifactMetadata_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bugu::service::v1::DeleteArtifactMetadataReply>* Bugu::Stub::AsyncDeleteArtifactMetadataRaw(::grpc::ClientContext* context, const ::bugu::service::v1::DeleteArtifactMetadataRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteArtifactMetadataRaw(context, request, cq);
  result->StartCall();
  return result;
}

Bugu::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Bugu_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Bugu::Service, ::bugu::service::v1::RegisterRequest, ::bugu::service::v1::RegisterReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Bugu::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bugu::service::v1::RegisterRequest* req,
             ::bugu::service::v1::RegisterReply* resp) {
               return service->Register(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Bugu_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Bugu::Service, ::bugu::service::v1::LoginRequest, ::bugu::service::v1::LoginReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Bugu::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bugu::service::v1::LoginRequest* req,
             ::bugu::service::v1::LoginReply* resp) {
               return service->Login(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Bugu_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Bugu::Service, ::bugu::service::v1::GetCurrentUserRequest, ::bugu::service::v1::GetCurrentUserReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Bugu::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bugu::service::v1::GetCurrentUserRequest* req,
             ::bugu::service::v1::GetCurrentUserReply* resp) {
               return service->GetCurrentUser(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Bugu_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Bugu::Service, ::bugu::service::v1::UpdateUserRequest, ::bugu::service::v1::UpdateUserReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Bugu::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bugu::service::v1::UpdateUserRequest* req,
             ::bugu::service::v1::UpdateUserReply* resp) {
               return service->UpdateUser(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Bugu_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Bugu::Service, ::bugu::service::v1::GetFileMetaRequest, ::bugu::service::v1::GetFileMetaReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Bugu::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bugu::service::v1::GetFileMetaRequest* req,
             ::bugu::service::v1::GetFileMetaReply* resp) {
               return service->GetFileMeta(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Bugu_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Bugu::Service, ::bugu::service::v1::GetFileMetaByUserIdRequest, ::bugu::service::v1::GetFileMetaByUserIdReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Bugu::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bugu::service::v1::GetFileMetaByUserIdRequest* req,
             ::bugu::service::v1::GetFileMetaByUserIdReply* resp) {
               return service->GetFileMetaByUserId(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Bugu_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Bugu::Service, ::bugu::service::v1::DeleteFileMetadataRequest, ::bugu::service::v1::DeleteFileMetadataReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Bugu::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bugu::service::v1::DeleteFileMetadataRequest* req,
             ::bugu::service::v1::DeleteFileMetadataReply* resp) {
               return service->DeleteFileMetadata(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Bugu_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Bugu::Service, ::bugu::service::v1::DetectRequest, ::bugu::service::v1::DetectReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Bugu::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bugu::service::v1::DetectRequest* req,
             ::bugu::service::v1::DetectReply* resp) {
               return service->Detect(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Bugu_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Bugu::Service, ::bugu::service::v1::ConfusionRequest, ::bugu::service::v1::ConfusionReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Bugu::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bugu::service::v1::ConfusionRequest* req,
             ::bugu::service::v1::ConfusionReply* resp) {
               return service->Confusion(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Bugu_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Bugu::Service, ::bugu::service::v1::GetArtifactMetadataRequest, ::bugu::service::v1::GetArtifactMetadataReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Bugu::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bugu::service::v1::GetArtifactMetadataRequest* req,
             ::bugu::service::v1::GetArtifactMetadataReply* resp) {
               return service->GetArtifactMetadata(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Bugu_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Bugu::Service, ::bugu::service::v1::GetArtifactMetadataByFileIdRequest, ::bugu::service::v1::GetArtifactMetadataByFileIdReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Bugu::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bugu::service::v1::GetArtifactMetadataByFileIdRequest* req,
             ::bugu::service::v1::GetArtifactMetadataByFileIdReply* resp) {
               return service->GetArtifactMetadataByFileId(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Bugu_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Bugu::Service, ::bugu::service::v1::DeleteArtifactMetadataRequest, ::bugu::service::v1::DeleteArtifactMetadataReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Bugu::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bugu::service::v1::DeleteArtifactMetadataRequest* req,
             ::bugu::service::v1::DeleteArtifactMetadataReply* resp) {
               return service->DeleteArtifactMetadata(ctx, req, resp);
             }, this)));
}

Bugu::Service::~Service() {
}

::grpc::Status Bugu::Service::Register(::grpc::ServerContext* context, const ::bugu::service::v1::RegisterRequest* request, ::bugu::service::v1::RegisterReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Bugu::Service::Login(::grpc::ServerContext* context, const ::bugu::service::v1::LoginRequest* request, ::bugu::service::v1::LoginReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Bugu::Service::GetCurrentUser(::grpc::ServerContext* context, const ::bugu::service::v1::GetCurrentUserRequest* request, ::bugu::service::v1::GetCurrentUserReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Bugu::Service::UpdateUser(::grpc::ServerContext* context, const ::bugu::service::v1::UpdateUserRequest* request, ::bugu::service::v1::UpdateUserReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Bugu::Service::GetFileMeta(::grpc::ServerContext* context, const ::bugu::service::v1::GetFileMetaRequest* request, ::bugu::service::v1::GetFileMetaReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Bugu::Service::GetFileMetaByUserId(::grpc::ServerContext* context, const ::bugu::service::v1::GetFileMetaByUserIdRequest* request, ::bugu::service::v1::GetFileMetaByUserIdReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Bugu::Service::DeleteFileMetadata(::grpc::ServerContext* context, const ::bugu::service::v1::DeleteFileMetadataRequest* request, ::bugu::service::v1::DeleteFileMetadataReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Bugu::Service::Detect(::grpc::ServerContext* context, const ::bugu::service::v1::DetectRequest* request, ::bugu::service::v1::DetectReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Bugu::Service::Confusion(::grpc::ServerContext* context, const ::bugu::service::v1::ConfusionRequest* request, ::bugu::service::v1::ConfusionReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Bugu::Service::GetArtifactMetadata(::grpc::ServerContext* context, const ::bugu::service::v1::GetArtifactMetadataRequest* request, ::bugu::service::v1::GetArtifactMetadataReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Bugu::Service::GetArtifactMetadataByFileId(::grpc::ServerContext* context, const ::bugu::service::v1::GetArtifactMetadataByFileIdRequest* request, ::bugu::service::v1::GetArtifactMetadataByFileIdReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Bugu::Service::DeleteArtifactMetadata(::grpc::ServerContext* context, const ::bugu::service::v1::DeleteArtifactMetadataRequest* request, ::bugu::service::v1::DeleteArtifactMetadataReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace bugu
}  // namespace service
}  // namespace v1

